version: "3.8"
services:
  database:
    container_name: db
    image: mysql
    restart: always
    env_file: ./.env
    expose:
      - 3306
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
      - MYSQL_PASSWORD=${MYSQLDB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_ROOT_USER=${MYSQLDB_USER}
      - MYSQL_ROOT_HOST=${MYSQLDB_ROOT_HOST}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./database/chatApp.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./database:/var/lib/database
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQLDB_ROOT_PASSWORD",
        ]
      timeout: 20s
      retries: 10

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    links:
      - database
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8080:80
    depends_on:
      database:
        condition: service_healthy
    networks:
      vpcbr:
        ipv4_address: 10.5.0.6

  server:
    build: ./backend
    expose:
      - 5000
    ports:
      - 5000:5000
    volumes:
      - ./backend/src:/app/server/src
    container_name: chatapp-api
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    networks:
      vpcbr:
        ipv4_address: 10.5.0.7

  client:
    build:
      context: ./chatApp
      args:
        - NODE_ENV=development
    ports:
      - "19006:19006"
      - "19001:19001"
      - "19002:19002"
    volumes:
      - ./chatApp:/app/client/app:delegated
      - ./chatApp/package.json:/app/client/package.json
      - ./chatApp/package-lock.json:/app/client/package-lock.json
      - notused:/app/client/app/node_modules
    container_name: chatapp
    restart: unless-stopped
    depends_on:
      - server
    networks:
      vpcbr:
        ipv4_address: 10.5.0.8

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

volumes:
  notused:
